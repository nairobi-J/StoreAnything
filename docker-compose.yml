version: '3.8'

services:
  # PostgreSQL Database Service
  db:
    image: postgres:16-alpine
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: StoreAnything
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: jerin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # Spring Boot Backend Service
  backend:
    build: ./backend
    container_name: spring_backend
    restart: on-failure
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/StoreAnything
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: jerin
      JWT_SECRET: JerryBerry
      # Add these critical environment variables:
      APP_FRONTEND_URL: http://frontend:3000
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Frontend Service
  frontend:
    build: ./frontend
    container_name: nextjs_frontend
    restart: on-failure
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_BACKEND_URL: http://backend:8080
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge